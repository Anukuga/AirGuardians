{"ast":null,"code":"var _jsxFileName = \"/Users/anusuyakugavarathan/Programming/AirGuardians-Backup/src/components/ChartDisplay.js\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartDisplay = ({\n  data,\n  chartType\n}) => {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    // Clear the previous chart\n    d3.select(svgRef.current).selectAll(\"*\").remove();\n    const width = 500;\n    const height = 300;\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 40,\n      left: 50\n    };\n    const svg = d3.select(svgRef.current).attr(\"viewBox\", [0, 0, width, height]).style(\"overflow\", \"visible\");\n    const xScale = d3.scaleBand().domain(data.map(d => d.time)).range([margin.left, width - margin.right + 100]).padding(0.2);\n    const yScale = d3.scaleLinear().domain([0, d3.max(data, d => Math.max(d.humidity, d.airQuality))]).range([height - margin.bottom, margin.top]);\n\n    // Add axes\n    svg.append(\"g\").attr(\"transform\", `translate(0, ${height - margin.bottom})`).call(d3.axisBottom(xScale).tickSizeOuter(0));\n    svg.append(\"g\").attr(\"transform\", `translate(${margin.left}, 0)`).call(d3.axisLeft(yScale));\n\n    // Draw the appropriate chart\n    if (chartType === \"histogram\") {\n      // Histogram: bars for humidity and air quality\n      svg.selectAll(\".bar-humidity\").data(data).join(\"rect\").attr(\"class\", \"bar-humidity\").attr(\"x\", d => xScale(d.time)).attr(\"y\", d => yScale(d.humidity)).attr(\"width\", xScale.bandwidth() / 4).attr(\"height\", d => yScale(0) - yScale(d.humidity)).attr(\"fill\", \"steelblue\");\n      svg.selectAll(\".bar-air-quality\").data(data).join(\"rect\").attr(\"class\", \"bar-air-quality\").attr(\"x\", d => xScale(d.time) + xScale.bandwidth() / 4).attr(\"y\", d => yScale(d.airQuality)).attr(\"width\", xScale.bandwidth() / 4).attr(\"height\", d => yScale(0) - yScale(d.airQuality)).attr(\"fill\", \"green\");\n    } else {\n      // Line Chart: humidity and air quality trends\n      const lineHumidity = d3.line().x(d => xScale(d.time) + xScale.bandwidth() / 2).y(d => yScale(d.humidity)).curve(d3.curveMonotoneX);\n      const lineAirQuality = d3.line().x(d => xScale(d.time) + xScale.bandwidth() / 2).y(d => yScale(d.airQuality)).curve(d3.curveMonotoneX);\n      svg.append(\"path\").datum(data).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 2).attr(\"d\", lineHumidity);\n      svg.append(\"path\").datum(data).attr(\"fill\", \"none\").attr(\"stroke\", \"green\").attr(\"stroke-width\", 2).attr(\"d\", lineAirQuality);\n    }\n  }, [data, chartType]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 10\n  }, this);\n};\n_s(ChartDisplay, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = ChartDisplay;\nexport default ChartDisplay;\nvar _c;\n$RefreshReg$(_c, \"ChartDisplay\");","map":{"version":3,"names":["useRef","useEffect","d3","jsxDEV","_jsxDEV","ChartDisplay","data","chartType","_s","svgRef","select","current","selectAll","remove","width","height","margin","top","right","bottom","left","svg","attr","style","xScale","scaleBand","domain","map","d","time","range","padding","yScale","scaleLinear","max","Math","humidity","airQuality","append","call","axisBottom","tickSizeOuter","axisLeft","join","bandwidth","lineHumidity","line","x","y","curve","curveMonotoneX","lineAirQuality","datum","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/anusuyakugavarathan/Programming/AirGuardians-Backup/src/components/ChartDisplay.js"],"sourcesContent":["import { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nconst ChartDisplay = ({ data, chartType }) => {\n  const svgRef = useRef();\n\n  useEffect(() => {\n    // Clear the previous chart\n    d3.select(svgRef.current).selectAll(\"*\").remove();\n\n    const width = 500;\n    const height = 300;\n    const margin = { top: 20, right: 30, bottom: 40, left: 50 };\n\n    const svg = d3\n      .select(svgRef.current)\n      .attr(\"viewBox\", [0, 0, width, height])\n      .style(\"overflow\", \"visible\");\n\n    const xScale = d3\n      .scaleBand()\n      .domain(data.map((d) => d.time))\n      .range([margin.left, width - margin.right + 100])\n      .padding(0.2);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(data, (d) => Math.max(d.humidity, d.airQuality))])\n      .range([height - margin.bottom, margin.top]);\n\n    // Add axes\n    svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(0, ${height - margin.bottom})`)\n      .call(d3.axisBottom(xScale).tickSizeOuter(0));\n\n    svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left}, 0)`)\n      .call(d3.axisLeft(yScale));\n\n    // Draw the appropriate chart\n    if (chartType === \"histogram\") {\n      // Histogram: bars for humidity and air quality\n      svg\n        .selectAll(\".bar-humidity\")\n        .data(data)\n        .join(\"rect\")\n        .attr(\"class\", \"bar-humidity\")\n        .attr(\"x\", (d) => xScale(d.time))\n        .attr(\"y\", (d) => yScale(d.humidity))\n        .attr(\"width\", xScale.bandwidth() / 4)\n        .attr(\"height\", (d) => yScale(0) - yScale(d.humidity))\n        .attr(\"fill\", \"steelblue\");\n\n      svg\n        .selectAll(\".bar-air-quality\")\n        .data(data)\n        .join(\"rect\")\n        .attr(\"class\", \"bar-air-quality\")\n        .attr(\"x\", (d) => xScale(d.time) + xScale.bandwidth() / 4)\n        .attr(\"y\", (d) => yScale(d.airQuality))\n        .attr(\"width\", xScale.bandwidth() / 4)\n        .attr(\"height\", (d) => yScale(0) - yScale(d.airQuality))\n        .attr(\"fill\", \"green\");\n    } else {\n      // Line Chart: humidity and air quality trends\n      const lineHumidity = d3\n        .line()\n        .x((d) => xScale(d.time) + xScale.bandwidth() / 2)\n        .y((d) => yScale(d.humidity))\n        .curve(d3.curveMonotoneX);\n\n      const lineAirQuality = d3\n        .line()\n        .x((d) => xScale(d.time) + xScale.bandwidth() / 2)\n        .y((d) => yScale(d.airQuality))\n        .curve(d3.curveMonotoneX);\n\n      svg\n        .append(\"path\")\n        .datum(data)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"steelblue\")\n        .attr(\"stroke-width\", 2)\n        .attr(\"d\", lineHumidity);\n\n      svg\n        .append(\"path\")\n        .datum(data)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"green\")\n        .attr(\"stroke-width\", 2)\n        .attr(\"d\", lineAirQuality);\n    }\n  }, [data, chartType]);\n\n  return <svg ref={svgRef}></svg>;\n};\n\nexport default ChartDisplay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}